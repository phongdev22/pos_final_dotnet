@{
	var IsAdmin = User.IsInRole("Admin");
	var IsManager = User.IsInRole("Manager");
	var IsEmployee = User.IsInRole("Employee");
}

<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<title>@ViewData["Title"]</title>
	<link rel="shortcut icon" href="~/images/logo.png" />
	<link rel="stylesheet" href="~/css/backend-plugin.min.css" />
	<link rel="stylesheet" href="~/css/backend.css?v=1.0.0" />
	<link rel="stylesheet" href="~/vendor/@@fortawesome/fontawesome-free/css/all.min.css" />
	<link rel="stylesheet" href="~/vendor/line-awesome/dist/line-awesome/css/line-awesome.min.css" />
	<link rel="stylesheet" href="~/vendor/remixicon/fonts/remixicon.css" />

</head>

<body>
	<div class="wrapper">
		<partial name="/Views/Shared/Header/Index.cshtml" />
		<div class="content-page mx-1">
			@RenderBody()
		</div>
	</div>
	<script src="~/js/backend-bundle.min.js"></script>
	<script src="~/js/app.js"></script>
	<script src="~/js/deleteFeature.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.1/signalr.js"></script>

	@if (IsAdmin)
	{

		<script>
			const hubConnections = [
				{ name: "productHub", url: "/productHub" },
				{ name: "orderHub", url: "/orderHub" }
			];

			async function startConnection(connectionInfo) {
				const connection = new signalR.HubConnectionBuilder()
					.withUrl(connectionInfo.url)
					.configureLogging(signalR.LogLevel.Information)
					.build();

				try {
					await connection.start();
					console.log(`SignalR Connected to ${connectionInfo.name} at ${connection.baseUrl}`);
				} catch (err) {
					console.log(err);
					setTimeout(() => startConnection(connectionInfo), 5000);
				}

				connection.onclose(async () => {
					await startConnection(connectionInfo);
				});
			}

			async function startAllConnections() {
				for (const connectionInfo of hubConnections) {
					await startConnection(connectionInfo);
				}
			}

			startAllConnections();
		</script>
		
	}

	@await RenderSectionAsync("Scripts", required: false)
</body>

</html>

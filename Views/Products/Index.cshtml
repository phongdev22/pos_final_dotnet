@using pos.Entities
@model pos.Models.PageViewModel<Product>
@{
	var IsAdmin = User.IsInRole("Admin");
	var IsManager = User.IsInRole("Manager");
	var Isemployee = User.IsInRole("Employee");
}

<div class="container-fluid">
	<div class="row">
		<div class="col-lg-12">
			<div class="d-flex flex-wrap flex-wrap align-items-center justify-content-between mb-4">
				<div class="w-50">
					<form id="storeForm" method="get">
						<div class="d-flex w-75 align-items-center">
							<label class="text my-0 w-25">List Store</label>
							<select name="store" class="selectpicker form-control" data-style="py-0" onchange="submitForm()">
								@foreach (var store in ViewBag.Stores)
								{
									<option value="@store.Id">@store.StoreName</option>
								}
							</select>
						</div>
					</form>
				</div>
				<a href="/products/create" class="btn btn-primary add-list"><i class="las la-plus mr-3"></i>Add Product</a>
			</div>
		</div>
		<div class="col-lg-12">
			<div class="table-responsive rounded mb-3">
				<table class="data-table table mb-0 tbl-server-info">
					<thead class="bg-white text-uppercase">
						<tr class="ligth ligth-data">
							<th class="col-lg-1 text-left">Code</th>
							<th class="col-lg-2 text-left">Product</th>
							<th>Price</th>
							@if (IsAdmin)
							{
								<th>Cost</th>
							}
							<th>Quantity</th>
							<th>Category</th>
							<th>Action</th>
						</tr>
					</thead>
					<tbody class="ligth-body">
						@foreach (var product in Model.Items)
						{
							<tr id="data-@product.Id">
								<td class="text-left text-truncate">@product.Barcode</td>
								<td>@product.Name</td>
								<td>@product.Price.ToString("N0").Replace(",", ".")đ</td>

								@if (IsAdmin)
								{
									<td>@product.Cost.ToString("N0").Replace(",", ".")đ</td>
								}

								<td>@product.Quantity</td>
								<td class="text-capitalize">@(product.Category != null ? product.Category.Name : "N/A")</td>
								<td>
									<div class="d-flex align-items-center list-action">
										<button class="btn btn-sm badge bg-primary mr-2"
												data-toggle="tooltip"
												data-placement="top"
												title=""
												data-original-title="View">
											<i class="ri-eye-line mr-0"></i>
										</button>

										@if (IsAdmin)
										{
											<a class="btn btn-sm badge bg-success mr-2"
											   data-toggle="tooltip"
											   data-placement="top"
											   title=""
											   href="/products/edit/@product.Id?store=@ViewBag.Store"
											   data-original-title="Edit"><i class="ri-pencil-line mr-0"></i></a>
											<button onclick="handleDelete(this)"
													class="btn btn-sm badge bg-warning mr-2"
													data-toggle="tooltip"
													data-placement="top"
													data-name="@product.Name"
													data-id="@product.Id"
													title=""
													data-original-title="Delete">
												<i class="ri-delete-bin-line mr-0"></i>
											</button>
										}
									</div>
								</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		</div>
	</div>
	<!-- Page end  -->
	<nav aria-label="Page navigation example">
		<ul class="pagination justify-content-center">
			<li class="page-item">
				<a class="page-link" href="?@(Model.PageNumber == 1 ? $"store={@ViewBag.Store}" : $"store={@ViewBag.Store}&page={Model.PageNumber - 1}")" tabindex="-1">Previous</a>
			</li>
			@{
				for (var i = 1; i <= Model.TotalPages; i++)
				{
					<li class="page-item"><a class="page-link" href="?store=@ViewBag.Store&page=@i">@i</a></li>
				}
			}
			<li class="page-item">
				<a class="page-link" href="?store=@ViewBag.Store&page=@(Model.PageNumber + 1)">Next</a>
			</li>
		</ul>
	</nav>
</div>

@section Scripts {
	<script>

		const storeQueryParam = new URLSearchParams(window.location.search).get('store');
		const selectElement = document.querySelector('select[name="store"]');

		if (storeQueryParam) {
			var optionToSelect = selectElement.querySelector('option[value="' + storeQueryParam + '"]');
			if (optionToSelect) {
				optionToSelect.selected = true;
			}
		}

		function submitForm() {
			document.getElementById('storeForm').submit();
		}
	</script>
}